@page
@model TheSafeOfThePilotBrothers.Pages.Grid
<!DOCTYPE html>
@{
ViewData["Title"] = "Grid";
}

<body>
    <h2>Grid</h2>

    <form method="post">
        <label for="gridSize">Enter grid size:</label>
        <input type="number" id="gridSize" name="gridSize" min="2" value="@Model.GridSize"/>
        <button onclick="updateGrid()">Submit Grid</button>
    </form>

<div>
    <table id="gridTable">
        @for (var i = 0; i < Model.GridSize; i++)
        {
            <tr>
                @for (var j = 0; j < Model.GridSize; j++)
                {
                    <td>
                        @{
                            if (i == 0 && j == 0)
                            {
                                Model.OnPostResizeGrid(Model.GridSize);
                            }
                            var cellValue = Model.GetLeverArray()[i, j];
                            string backgroundColor;
                            if (cellValue == 1)
                            {
                                backgroundColor = "green";
                            }
                            else
                            {
                                backgroundColor = "red";
                            }

                            string cellId = $"cell_{i}_{j}";
                        }
                        <div id="@cellId" class="gridCell"
                             style="width: 60px; height: 60px; background-color: @backgroundColor; cursor: pointer;"
                             onclick="toggleCellColor('@cellId', @i, @j)">
                            @cellValue.ToString()
                        </div>
                    </td>
                }
            </tr>
        }
    </table>
</div>

</body>

<script>
    function toggleCellColor(cellId, row, col) {
        // Переключение значения кликнутой ячейки
        var cell = document.getElementById(cellId);
        var cellValue = cell.innerText.trim() === '1' ? 0 : 1;
        cell.innerText = cellValue.toString();
        cell.style.backgroundColor = cellValue === 1 ? 'green' : 'red';

        // Переключение всех ячеек в строке
        for (var i = 0; i < @Model.GetLeverArray().GetLength(0); i++) {
            if (i !== col) {
                var rowCellId = "cell_" + row + "_" + i;
                var rowCell = document.getElementById(rowCellId);
                var rowValue = rowCell.innerText.trim() === '1' ? 0 : 1;
                rowCell.innerText = rowValue.toString();
                rowCell.style.backgroundColor = rowValue === 1 ? 'green' : 'red';
            }
        }

        // Переключение всех ячеек в столбце
        for (var j = 0; j < @Model.GetLeverArray().GetLength(1); j++) {
            if (j !== row) {
                var colCellId = "cell_" + j + "_" + col;
                var colCell = document.getElementById(colCellId);
                var colValue = colCell.innerText.trim() === '1' ? 0 : 1;
                colCell.innerText = colValue.toString();
                colCell.style.backgroundColor = colValue === 1 ? 'green' : 'red';
            }
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Page("Grid")',
            data: {
                handler: 'ToggleChangeColor',
                i: row,
                j: col
            },
            success: function (response) {
                console.log('Success');
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
            }
        });
    }
    
    
    function updateGrid() {
    var gridSize = document.getElementById("gridSize").value;
        $.ajax({
            type: "POST",
            url: "/Grid/ResizeGrid",
            data: { gridSize: gridSize },
            success: function (response) { 
                console.log(response);
            },
            error: function (error) { 
            console.error('Error:', error);
            }
        },
        )
    }
</script>